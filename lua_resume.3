.Dd $Mdocdate: July 15 2022 $
.Dt LUA_RESUME 3
.Os
.Sh NAME
.Nm lua_resume
.Nd starts and resumes a coroutine in a given thread
.Sh SYNOPSIS
.In lua.h
.Ft int
.Fn lua_resume "lua_State *L" "int narg"
.Sh DESCRIPTION
.Fn lua_resume
starts and resumes a coroutine in a given thread.
.Pp
To start a coroutine, you first create a new thread (see
.Xr lua_newthread 3 );
then you push onto its stack the main function plus any arguments; then you
call lua_resume, with narg being the number of arguments.
This call returns when the coroutine suspends or finishes its execution.
When it returns, the stack contains all values passed to
.Xr lua_yield 3 ,
or all values returned by the body function.
In case of errors, the stack is not unwound,
so you can use the debug API over it.
The error message is on the top of the stack.
To restart a coroutine, you put on its stack only the values to be passed as
results from yield, and then call lua_resume.
.Sh RETURN VALUES
.Fn lua_resume
returns
.Dv LUA_YIELD
if the coroutine yields, 0 if the coroutine finishes its execution without
errors, or an error code in case of errors (see
.Xr lua_pcall 3
).
.Sh SEE ALSO
.Xr lua_newthread 3 ,
.Xr lua_pcall 3 ,
.Xr lua_yield 3
.Rs
.%A Roberto Ierusalimschy
.%A Luiz Henrique de Figueiredo
.%A Waldemar Celes
.%T Lua 5.1 Reference Manual
.Re
.Sh HISTORY
The
.Fn lua_resume
manual page was written by Sergey Bronnikov.
