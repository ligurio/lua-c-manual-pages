.Dd $Mdocdate: July 26 2022 $
.Dt LUAL_BUFFER 3
.Os
.Sh NAME
.Nm luaL_Buffer
.Nd type for a string buffer
.Sh SYNOPSIS
.In lauxlib.h
.Vt typedef struct luaL_Buffer luaL_Buffer ;
.Sh DESCRIPTION
.Fn luaL_Buffer
type for a
.Em string buffer .
.Pp
A string buffer allows C code to build Lua strings piecemeal.
Its pattern of use is as follows:
.Pp
.Bl -bullet -compact
.It
First you declare a variable b of type
.Nm luaL_Buffer .
.It
Then you initialize it with a call
.Em luaL_buffinit(L, &b) .
.It
Then you add string pieces to the buffer calling any of the
.Em luaL_add*
functions.
.It
You finish by calling
.Em luaL_pushresult(&b) .
This call leaves the final string on the top of the stack.
.El
.Pp
During its normal operation, a string buffer uses a variable number of stack
slots.
So, while using a buffer, you cannot assume that you know where the top
of the stack is.
You can use the stack between successive calls to buffer operations as long as
that use is balanced; that is, when you call a buffer operation, the stack is
at the same level it was immediately after the previous buffer operation.
.Pq The only exception to this rule is Em luaL_addvalue .
After calling
.Xr luaL_pushresult 3
the stack is back to its level when the buffer was initialized, plus the final
string on its top.
.Sh SEE ALSO
.Xr luaL_pushresult 3
.Rs
.%A Roberto Ierusalimschy
.%A Luiz Henrique de Figueiredo
.%A Waldemar Celes
.%T Lua 5.1 Reference Manual
.Re
.Sh HISTORY
The
.Fn luaL_Buffer
manual page is based on Lua Reference Manual 5.1 and was created by Sergey Bronnikov.
